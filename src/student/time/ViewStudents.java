/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student.time;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADN Telecom
 */
public class ViewStudents extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form ViewStudents
     */
    public ViewStudents() {
        this.setTitle("View Student");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\ADN Telecom\\Desktop\\logo\\rsz_1addstudent.png"));
        initComponents();
        model = (DefaultTableModel) tblstd.getModel();
        String s = "C:\\Users\\ADN Telecom\\Desktop\\Student TIme\\StudentsInfo.txt";
        File f = new File(s);
        try {

            BufferedReader b = new BufferedReader(new FileReader(f));
            //  System.out.println("j");
//            String firstLine = b.readLine().trim();
//            String[] columnsName = firstLine.split(" , ");
//            //  model.setColumnCount(columnsName.length);
//            model.setColumnIdentifiers(columnsName);
            Object[] tablesLines = b.lines().toArray();
            //   System.out.println(""+tablesLines.length);
            for (int i = 0; i < tablesLines.length; i++) {
                String ln = tablesLines[i].toString().trim();
                //  System.out.println("j");
                String[] data = ln.split("@@@@");
                String[] modi = new String[4];
                // modi[0] = "S202100" + i + 1;
                for (int j = 0; j < 4; j++) {
                    modi[j] = data[j];
                }
                model.addRow(modi);
                // modl.addRow(modi);
            }
        } catch (IOException ex) {
            System.out.println("Problem");
        }
    }
    // rsz_1addstudent

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblstd = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ecnt = new javax.swing.JTextField();
        show = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        search = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        tblstd.setAutoCreateRowSorter(true);
        tblstd.setBackground(new java.awt.Color(255, 255, 204));
        tblstd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblstd.setForeground(new java.awt.Color(51, 51, 0));
        tblstd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "E.Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblstd.getTableHeader().setReorderingAllowed(false);
        tblstd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblstdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblstd);

        jLabel1.setText("Name");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel2.setText("Email");

        jLabel3.setText("ID");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel5.setText("E.Contact");

        show.setText("Show");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Student's Information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name)
                            .addComponent(email)
                            .addComponent(id)
                            .addComponent(ecnt))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(show)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(16, 16, 16)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(search)
                        .addGap(10, 10, 10)
                        .addComponent(back)
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(438, 438, 438)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ecnt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(show)
                            .addComponent(delete)
                            .addComponent(search)
                            .addComponent(back)
                            .addComponent(jButton1)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        int p = -1; // ID or row select korbe
        if (tblstd.getSelectedRow() == -1 && id.getText().trim().isEmpty()) { // row selected na then            
            JOptionPane.showMessageDialog(ViewStudents.this, "Invalid Row and empty ID");
            return;
        } else if (tblstd.getSelectedRow() == -1 && id.getText().trim().isEmpty() != true) {
            String s = id.getText().trim();
            // int p = -1 ;
            for (int i = 0; i < tblstd.getRowCount(); i++) {
                String x = ((String) model.getValueAt(i, 0));
                if (x.equalsIgnoreCase(s)) {
                    p = i;
                    break;
                }
            }
            if (p == -1) {
                JOptionPane.showMessageDialog(ViewStudents.this, "Invalid ID");
                return;
            }

        } else {
            p = tblstd.getSelectedRow();
        }
        Res n = new Res(((String) model.getValueAt(p, 1)), ((String) model.getValueAt(p, 2)), ((String) model.getValueAt(p, 0)), ((String) model.getValueAt(p, 3)));
        // model.removeRow(tblstd.getSelectedRow());
    }//GEN-LAST:event_showActionPerformed
    class Res {

        public Res() {
            name.setText("");
            email.setText("");
            id.setText("");
            ecnt.setText("");
        }

        public Res(String s1, String s2, String s3, String s4) {
            name.setText(s1);
            email.setText(s2);
            id.setText(s3);
            ecnt.setText(s4);
        }
    }
    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        setVisible(false);
        homepage m = new homepage();
        m.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        tblstd.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void tblstdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblstdMouseClicked
        // TODO add your handling code here:
        //  JOptionPane.showMessageDialog(ViewStudents.this, "hi "+tblstd.getSelectedRow());
    }//GEN-LAST:event_tblstdMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int p = -1; // ID or row select korbe
        if (tblstd.getSelectedRow() == -1 && id.getText().trim().isEmpty()) { // row selected na then            
            JOptionPane.showMessageDialog(ViewStudents.this, "Invalid Row and empty ID");
            return;
        } else if (tblstd.getSelectedRow() == -1 && id.getText().trim().isEmpty() != true) {
            String s = id.getText().trim();
            // int p = -1 ;
            for (int i = 0; i < tblstd.getRowCount(); i++) {
                String x = ((String) model.getValueAt(i, 0));
                x = x.trim();
                if (x.equalsIgnoreCase(s)) {
                    p = i;
                    break;
                }
            }
            if (p == -1) {
                JOptionPane.showMessageDialog(ViewStudents.this, "Invalid ID");
                return;
            }
        } else {
            p = tblstd.getSelectedRow();
        }
        String s = (String) model.getValueAt(p, 0); // ID number nilam
        //deleting info       
        String s2 = "C:\\Users\\ADN Telecom\\Desktop\\Student TIme\\StudentsInfo.txt"; // file open korlam the studentinfo file
        File f = new File(s2);
        Scanner gt = null;
        try {
            gt = new Scanner(f); // will scan the studentinfo file
        } catch (FileNotFoundException ex) {
        }
        File f2 = new File("C:\\Users\\ADN Telecom\\Desktop\\Student TIme\\x.txt"); // x name a new file banabo jodi na thake thn
        // new file 
        try {
            if (f2.createNewFile()) {
            } else {
            }
        } catch (IOException e) {
        }
        try { // opening a file and want to write in it
            FileWriter x = new FileWriter(f2, false);// x file a likhbo x = f2 , std = f 
            while (gt.hasNext()) {
                String u = gt.nextLine().trim();
                if (u.isEmpty() == false) {
                    String[] str = u.split("@@@@");
                    String a = "";
                    for (int i = 0; i < str.length; i++) {
                        if (i == 0) {
                            a += (str[i]);
                        } else {
                            a += ("@@@@" + str[i]);
                        }
                    }
                    a += "\n";
                    if (str[0].equals(s) == false) {
                        x.write(a);
                    }
                }
            }
            //File f3 = new File("D:\\javaproject\\School Management\\p.txt");
            // f1.renameTo(f);
            x.close();
            //f.renameTo(f3);
        } catch (Exception e) {
            // System.out.println("h k i");
        }
        gt.close();
        File a = new File("C:\\Users\\ADN Telecom\\Desktop\\Student TIme\\x.txt");
        File b = new File("C:\\Users\\ADN Telecom\\Desktop\\Student TIme\\StudentsInfo.txt");
        Scanner get2 = null;
        try {
            // copy everything from x to student
            get2 = new Scanner(a); // scanning x txt file
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(ViewStudents.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            FileWriter h = new FileWriter(b); // ai file a new kore likhbo  
            while (get2.hasNext()) {
                String u = get2.nextLine().trim();
                if (u.isEmpty() == false) {
                    h.write(u);
                    h.write("\n");
                }
            }
            h.close();
        } catch (Exception e) {
        }
        get2.close();
        model.removeRow(tblstd.getSelectedRow());
        Res n = new Res();
    }//GEN-LAST:event_deleteActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        int p = -1; // ID or row select korbe
        if (id.getText().trim().isEmpty()) { // row selected na then            
            JOptionPane.showMessageDialog(ViewStudents.this, "Enter ID");
            return;
        } else {
            String s = id.getText().trim();
            // int p = -1 ;
            for (int i = 0; i < tblstd.getRowCount(); i++) {
                String x = ((String) model.getValueAt(i, 0));
                if (x.equalsIgnoreCase(s)) {
                    p = i;
                    break;
                }
            }
            if (p == -1) {
                JOptionPane.showMessageDialog(ViewStudents.this, "Invalid ID");
                return;
            }

        }
        Res n = new Res(((String) model.getValueAt(p, 1)), ((String) model.getValueAt(p, 2)), ((String) model.getValueAt(p, 0)), ((String) model.getValueAt(p, 3)));
        // model.removeRow(tblstd.getSelectedRow());
    }//GEN-LAST:event_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        name.setText("");
        email.setText("");
        id.setText("");
        ecnt.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewStudents.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewStudents.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewStudents.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewStudents.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewStudents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JTextField ecnt;
    private javax.swing.JTextField email;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JButton search;
    private javax.swing.JButton show;
    private javax.swing.JTable tblstd;
    // End of variables declaration//GEN-END:variables
}
